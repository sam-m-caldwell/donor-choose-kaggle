summarise(num_donors = n()) %>%
drop_na() %>%
hchart("line", hcaes(x = max_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE)))
?max
df_donations_summary = df_donations %>%
group_by(`Donor ID`) %>%
arrange(`Donation Received Date`) %>%
mutate(time_between_donations = round(
as.numeric(`Donation Received Date`-lag(`Donation Received Date`), units = 'days'))) %>%
summarise(num_projects = n_distinct(`Project ID`),
num_donations = n(),
sum_donations = sum(`Donation Amount`),
first_donation = min(`Donation Received Date`),
last_donation = max(`Donation Received Date`),
mean_donation_gap = mean(time_between_donations, na.rm = TRUE),
max_donation_gap = max(time_between_donations, na.rm = TRUE)) %>%
mutate(repeat_donations = if_else(num_donations > 1, 1, 0),
repeat_projects = if_else(num_projects > 1, 1, 0),
average_donation = sum_donations/num_donations) %>%
left_join(df_donors, by = "Donor ID")
df_donations_summary %>%
mutate(max_donation_gap = round(max_donation_gap)) %>%
group_by(max_donation_gap) %>%
summarise(num_donors = n()) %>%
drop_na() %>%
hchart("line", hcaes(x = max_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE))) %>%
hc_yAxis(title = list(text = "Number of Donors")) %>%
hc_xAxis(title = list(text = "Max Time Between Donations (days)"))
View(df_donations_summary)
df_donations_summary %>%
mutate(max_donation_gap = round(max_donation_gap)) %>%
group_by(max_donation_gap) %>%
summarise(num_donors = n()) %>%
drop_na() %>%
filter(is.finite(max_donation_gap)) %>%
hchart("line", hcaes(x = max_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE))) %>%
hc_yAxis(title = list(text = "Number of Donors")) %>%
hc_xAxis(title = list(text = "Max Time Between Donations (days)"))
df_donations_summary %>%
mutate(mean_donation_gap = round(mean_donation_gap)) %>%
group_by(mean_donation_gap) %>%
summarise(num_donors = n()) %>%
drop_na() %>%
hchart("line", hcaes(x = mean_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE))) %>%
hc_yAxis(title = list(text = "Number of Donors")) %>%
hc_xAxis(title = list(text = "Mean Time Between Donations (days)"))
df_donations_summary %>%
mutate(mean_donation_gap = round(mean_donation_gap)) %>%
group_by(mean_donation_gap) %>%
summarise(num_donors = n()) %>%
drop_na() %>%
filter(mean_donation_gap > 1, mean_donation_gap<500) %>%
hchart("area", hcaes(x = mean_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE))) %>%
hc_yAxis(title = list(text = "Number of Donors")) %>%
hc_xAxis(title = list(text = "Mean Time Between Donations (days)"))
df_donations_summary %>%
mutate(mean_donation_gap = round(mean_donation_gap)) %>%
group_by(mean_donation_gap) %>%
summarise(num_donors = n()) %>%
drop_na() %>%
filter(mean_donation_gap > 1, mean_donation_gap<500) %>%
hchart("line", hcaes(x = mean_donation_gap, y = num_donors)) %>%
hc_navigator(enabled = TRUE, xAxis = list(labels = list(enabled = FALSE))) %>%
hc_yAxis(title = list(text = "Number of Donors")) %>%
hc_xAxis(title = list(text = "Mean Time Between Donations (days)"))
?hcmap
library(highcharter)
library(tidyverse)
hcmap(mapdata, data = unemployment,
name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
library(highcharter)
library(tidyverse)
hcmap(map = mapdata, data = unemployment,
name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
yo = download_map_data("countries/us/us-all-all")
hcmap(yo, data = unemployment,
name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = yo, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
saveRDS(yo, file = "yo.RDS")
load("yo.RDS")
hi <- readRDS("C:/Users/Sam/Desktop/kaggle/donors/yo.RDS")
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = hi, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
hcmap(yo, data = unemployment,
name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = hi, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0) %>%
hc_add_series(data = unemployment, name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent")
View(unemployment)
?hc_add_series
?hcmap
highchart() %>%
hc_title(text = "Violent Crime Rates by US State") %>%
hc_subtitle(text = "Source: USArrests data") %>%
hc_add_series_map(usgeojson, USArrests, name = "Murder arrests (per 100,000)",
value = "Murder", joinBy = c("woename", "state"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.postalcode}')) %>%
hc_colorAxis(stops = color_stops()) %>%
hc_legend(valueDecimals = 0, valueSuffix = "%") %>%
hc_mapNavigation(enabled = TRUE)
data("USArrests", package = "datasets")
data("usgeojson")
USArrests <- mutate(USArrests, state = rownames(USArrests))
highchart() %>%
hc_title(text = "Violent Crime Rates by US State") %>%
hc_subtitle(text = "Source: USArrests data") %>%
hc_add_series_map(usgeojson, USArrests, name = "Murder arrests (per 100,000)",
value = "Murder", joinBy = c("woename", "state"),
dataLabels = list(enabled = TRUE,
format = '{point.properties.postalcode}')) %>%
hc_colorAxis(stops = color_stops()) %>%
hc_legend(valueDecimals = 0, valueSuffix = "%") %>%
hc_mapNavigation(enabled = TRUE)
data("usgeojson")
library(highcharter)
library(tidyverse)
data("USArrests", package = "datasets")
data("usgeojson")
highchart() %>%
hc_add_series_map(usgeojson, data = df_state_summary, value = "prop_rep_projects",
joinBy = c("hc-a2", "state_code"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
highchart() %>%
hc_add_series_map(usgeojson, data = df_state_summary, value = "prop_rep_projects",
joinBy = c("hc-a2", "state_code"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
highchart() %>%
hc_add_series_map(usgeojson, data = df_state_summary, value = "prop_rep_projects",
joinBy = c("hc-a2", "state_code"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent")
highchart() %>%
hc_add_series_map(usgeojson, data = df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "Donor State"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent")
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "Donor State"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent")
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "`Donor State`"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
df_state_summary = df_state_summary %>% mutate(name = `Donor State`)
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
View(df_state_summary)
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na()
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name - `Donor State`)
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`)
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
hc = highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
hc$dependencies
hc$x
hc$x$hc_opts$series[[1]]
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
filter(name != "öther")
View(df_state_summary)
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
filter(!(name %in%"öther"))
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
mutate(log =(name %in% "öther")  )
View(df_state_summary)
mutate(log =(name == "öther")  )
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
mutate(log =(name == "öther")  )
View(data_fake)
df_state_summary$name
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
filter(!(name %in% "other"))
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
filter(!(name %in% "other"))
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
View(df_state_mapping)
View(df_schools_num)
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(seq(min(df_state_summary$prop_rep_projects), from = max(df_state_summary$prop_rep_projects), length.out = 6)))
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(
seq(min(df_state_summary$prop_rep_projects),
from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
highchart() %>%
hc_add_series(usgeojson, type = "map", df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(
seq(min(df_state_summary$prop_rep_projects),
from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
highchart() %>%
hc_add_series(type = "map", mapData = usgeojson, data = df_state_summary, value = "prop_rep_projects",
joinBy = c("woename", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(
seq(min(df_state_summary$prop_rep_projects),
from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
?hc_colorAxis
?color_stops
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
drop_na() %>%
mutate(name = `Donor State`) %>%
filter(!(name %in% "other"))
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("postalcode", "name"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(
seq(min(df_state_summary$prop_rep_projects),
from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
get_data_from_map(usgeojson)
mapping = get_data_from_map(usgeojson)
df_mapdata_states <- get_data_from_map(usgeojson)
df_mapdata_counties <- get_data_from_map(uscountygeojson)
df_schools_joined <- df_schools %>%
left_join(df_state_mapping, by = c('School State' = 'state_name')) %>%
left_join(df_county_mapping, by = c('School County' = 'county_name'))
data("usgeojson")
data("uscountygeojson")
df_mapdata_states <- get_data_from_map(usgeojson)
df_mapdata_counties <- get_data_from_map(uscountygeojson)
df_state_mapping = df_mapdata_states %>%
transmute(state_code = `hc-a2`, state_name = name) %>%
distinct(state_code, state_name)
df_state_mapping = df_mapdata_states %>%
transmute(state_code = postalcode, state_name = name) %>%
distinct(state_code, state_name)
data("usgeojson")
data("uscountygeojson")
df_mapdata_states <- get_data_from_map(usgeojson)
df_mapdata_counties <- get_data_from_map(uscountygeojson)
df_state_mapping = df_mapdata_states %>%
transmute(state_code = postalcode, state_name = name) %>%
distinct(state_code, state_name)
df_county_mapping = df_mapdata_counties %>%
transmute(county_code = `code`, county_name = name) %>%
distinct(county_code, county_name)
df_schools_joined <- df_schools %>%
left_join(df_state_mapping, by = c('School State' = 'state_name')) %>%
left_join(df_county_mapping, by = c('School County' = 'county_name'))
df_schools_num_county = df_schools_joined %>%
group_by(county_code) %>%
summarise(num_schools = n()) %>%
ungroup() %>%
drop_na() %>%
right_join(df_county_mapping) %>%
replace_na(list(num_schools = 0))
hcmap("countries/us/us-all-all", data = df_schools_num_county, value = "num_schools",
joinBy = c("code", "county_code"), name = "Number of Schools",
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(1, 10, 100, 1000, max(df_schools_num_county$num_schools)))) %>%
hc_title(text = "Where the schools at!?") %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
highcharts() %>%
hc_add_series_map(uscountygeojson,  data = df_schools_num_county, value = "num_schools",
joinBy = c("code", "county_code"), name = "Number of Schools",
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(1, 10, 100, 1000, max(df_schools_num_county$num_schools)))) %>%
hc_title(text = "Where the schools at!?") %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
highchart() %>%
hc_add_series_map(uscountygeojson,  data = df_schools_num_county, value = "num_schools",
joinBy = c("code", "county_code"), name = "Number of Schools",
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(1, 10, 100, 1000, max(df_schools_num_county$num_schools)))) %>%
hc_title(text = "Where the schools at!?") %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
highchart() %>%
hc_add_series_map(uscountygeojson,  df_schools_num_county, value = "num_schools",
joinBy = c("code", "county_code"), name = "Number of Schools",
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(1, 10, 100, 1000, max(df_schools_num_county$num_schools)))) %>%
hc_title(text = "Where the schools at!?") %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
inner_join(df_state_mapping, by = c('Donor State' = 'state_name')) %>%
drop_na()
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("postalcode", "state_code"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
hc_colorAxis(dataClasses = color_classes(
seq(min(df_state_summary$prop_rep_projects),
from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
#hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
df_state_summary = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(prop_rep_donations = 100*sum(repeat_donations)/n(),
prop_rep_projects = 100*sum(repeat_projects)/n()) %>%
inner_join(df_state_mapping, by = c('Donor State' = 'state_name')) %>%
drop_na()
highchart() %>%
hc_add_series_map(usgeojson, df_state_summary, value = "prop_rep_projects",
joinBy = c("postalcode", "state_code"), name = "Proportion Donating Multiple Projects",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1, valueSuffix = "%") %>%
# hc_colorAxis(dataClasses = color_classes(
#   seq(min(df_state_summary$prop_rep_projects),
#       from = max(df_state_summary$prop_rep_projects), length.out = 6))) %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%") %>%
hc_title(text = "Proportion of Donors Donating to Multiple Projects by State")
df_state_time = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(mean_donation_gap = mean(mean_donation_gap, na.rm = TRUE)) %>%
inner_join(df_state_mapping, by = c('Donor State' = 'state_name')) %>%
drop_na()
highchart() %>%
hcmap(usgeojson, df_state_time, value = "mean_donation_gap",
joinBy = c("hc-a2", "state_code"), name = "Mean time between donations",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1) %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
df_state_time = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(mean_donation_gap = mean(mean_donation_gap, na.rm = TRUE)) %>%
inner_join(df_state_mapping, by = c('Donor State' = 'state_name')) %>%
drop_na()
highchart() %>%
hc_add_series_map(usgeojson, df_state_time, value = "mean_donation_gap",
joinBy = c("hc-a2", "state_code"), name = "Mean time between donations",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1) %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
df_state_time = df_donations_summary %>%
group_by(`Donor State`) %>%
summarise(mean_donation_gap = mean(mean_donation_gap, na.rm = TRUE)) %>%
inner_join(df_state_mapping, by = c('Donor State' = 'state_name')) %>%
drop_na()
highchart() %>%
hc_add_series_map(usgeojson, df_state_time, value = "mean_donation_gap",
joinBy = c("postalcode", "state_code"), name = "Mean time between donations",
borderColor = "transparent") %>%
hc_tooltip(valueDecimals = 1) %>%
hc_colorAxis(stops = color_stops(6)) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0)
